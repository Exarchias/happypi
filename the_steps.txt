sudo apt-get update
sudo apt-get upgrade
https://www.makersupplies.sg/blogs/tutorials/how-to-install-node-js-and-npm-on-the-raspberry-pi
https://nodejs.org/download/release/v8.11.4/
wget https://nodejs.org/download/release/v8.11.4/node-v8.11.4-linux-armv7l.tar.gz
tar -xzf node-v8.11.4-linux-armv7l.tar.gz
cd node-v8.11.4-linux-armv7l
sudo cp -R * /usr/local/
node -v
//v8.11.4
npm -v
//5.6.0
npm install thingy52 //throws warnings and errors
sudo apt update
sudo apt install code //didn't work. bad choice
https://code.visualstudio.com/docs/?dv=linuxarmhf //downloading it manually. bad choice
//moving code-stable-armhf-1637136751.tar.gz to home/pi (one folder up from downloads). bad choice
tar -xzf code-stable-armhf-1637136751.tar.gz //bad choice
cd VSCode-linux-armhf //bad choice
sudo cp -R * /usr/local/ //didn't work. bad choice
sudo apt-get update
sudo apt-get upgrade
sudo apt install code //didn't work. bad choice
sudo apt install code -y //didn't work. bad choice
sudo apt-get update
sudo apt-get upgrade
sudo apt install code -y //didn't work. bad choice
https://pimylifeup.com/raspberry-pi-visual-studio-code/ //followed its instructions. It worked!
//Ran /home/pi/node_modules/thingy52/examples/led.js it worked!
//going for the hs100
sudo git clone https://github.com/plasticrake/hs100-api.git //it is for the hs100. not needed.
sudo git clone https://github.com/exarchias/happypi.git //cloning the code for the pi. delete it and reclone it for updates.
sudo rm -r /home/pi/happypi //removing the old happypi


a repository to try to clone, (a nodejs project that I wish to check if it works)
=================================================================================
sudo git clone https://github.com/NordicPlayground/webapp-nordic-thingy.git 



==============
EXPLAINATIONS
=============

webapp-nordic-thingy
====================
It tries to use react instance. Right click on ht eReact folder and select "visual studio code".
1)sudo npm install //danger to froze the pi
2)sudo npm start
This instance serves as a proof that React can't work on the node.js version we are using.


expressThingy52Nhs100
=====================
It serves as an example. it just includes both thingy52 and hs100 in the same express instance.
By itself it does nothing. but the examples server to understand both technologies.
For examples/motion.js the console.table module needs to be installed explicitely, and that means "sudo npm install console.table"
The hs100 ip is configured correctly: 192.168.1.201
1)sudo npm install
Maybe "sudo npm install tplink-smarthome-api" as well. (for the hs100)
Also maybe "sudo npm install console.table", (for motion.js example)
2)sudo node examples/name_of_file.js


expressNhs100
=============
An express instance of the proxy server that turns on and off the smart plug HS100 through its ip (192.168.1.201) and it is accessed by get on "http://localhost:3000/onoff"
Is made to work on Windows. To make it work on pi, the module 'tplink-smarthome-api' is needed to installed explicitelly, (but it seems to work with a simple inclusive install).
Important to run it with sudo:
1)sudo npm install
Maybe "sudo npm install tplink-smarthome-api" as well. 
2)sudo npm start


ETHTask1, (the task 1)
======================
the final step, (step 4), on task 1 of the lab, asks for an instance that turns on/off the hs100 smartplug when the button from the NordigThingy52 is pressed, and that is exactly what ETHTask1 does. ETHTask1 uses both Thingy52 and HS100 technologies, and that means that both technolgoies need to be taken into consinderation.
To make it work on pi, the module 'tplink-smarthome-api' is needed to installed explicitelly, (but it seems to work with a simple inclusive install).
The hs100 ip is configured correctly: 192.168.1.201
Important to run it with sudo:
1)sudo npm install
Maybe "sudo npm install tplink-smarthome-api" as well. 
2)sudo npm start


ETHTask1n2, (tasks 1 and 2)
===========================
ETHTask1n2 is designed to deliver what task 2 asks for, namely to do the same thing as the step 4 from task 1 but this time by using IFTTT to access a Nettio device, (another, web-capable smart plug), through an internet address. theoretically. can this achieved through directl link, BUT, i worry about the firewall. in any case, the task was about ifttt and it is done.
ETHTask1n2 uses both Thingy52 and HS100 technologies, and that means that both technolgoies need to be taken into consinderation.
To make it work on pi, the module 'tplink-smarthome-api' is needed to installed explicitelly, (but it seems to work with a simple inclusive install).
The hs100 ip is configured correctly: 192.168.1.201
Important to run it with sudo:
1)sudo npm install
Maybe "sudo npm install tplink-smarthome-api" as well. 
2)sudo npm start

The ETHTask1n2, (task 2) details for a hadshake
=================================
HS100 on/off works, (through local connection)
Nettion on/off for plug 1 works, (through ifttt)
The link for the ifttt request is
https://maker.ifttt.com/trigger/onoff/with/key/j2eqWrlFER7ngphU4IUTDmYD7QNigvN_mqXCg36Kd0L
the key is j2eqWrlFER7ngphU4IUTDmYD7QNigvN_mqXCg36Kd0L
For the plug 1 of Nettio, (http://194.47.1.210/nettio.cgi?pass=hkr&output1=4)
Important to run it with sudo:
1)sudo npm install
Maybe "sudo npm install tplink-smarthome-api" as well. 
2)sudo npm start

ETHTask1to3, (task 3)
=====================
Task 3, (ETHTask1to3), is about creating a web server that utilizes both of the technologies, (thingy and hs100), to a web server. Thankfully a bug of instantiating the relevant technologies got sorted out, and now I can complete the task, (which is the most difficult and important one).
For examples/motion.js the console.table module needs to be installed explicitely, and that means "sudo npm install console.table"
the examples/radio.js is not working and it will not be used.
the examples/microphone.js is not working and it will not be used.
Button works
HS100 on/off works
Nettion on/off for plug 1 works
Led "works", (it is broken but it is confirmed by using the example as control)
Gas Sensor works, (I am not sure for the validity of the results).
The server delivers the data as json through get to /sdata
motion sensor works and generates data. Tried implement toggle on/off to the sensor but I was not able to do so. I added this functionality finally to the button. It works but it doesn't stop the sensor, (it is not a problem so we can ignore that).
A strange bug is that the sensor delivers the first motion data to the homepage after the button is pressed.
The link for the ifttt request is:
https://maker.ifttt.com/trigger/onoff/with/key/j2eqWrlFER7ngphU4IUTDmYD7QNigvN_mqXCg36Kd0L
the key is j2eqWrlFER7ngphU4IUTDmYD7QNigvN_mqXCg36Kd0L
For the plug 1 of Nettio, (http://194.47.1.210/nettio.cgi?pass=hkr&output1=4)
Important to run it with sudo:
1)sudo npm install
2)Probably needs "sudo npm install tplink-smarthome-api" as well.
3)sudo npm install console.table
4)sudo npm start

IMPORTANT BUG DETECTED
======================
Node.js on Pi does not kill the server when you kill the terminal and it produces an error when you try to rerun the server. The solution for now is to reboot the pi, every time you wish to kill and rerun the server.

ETHTask1to4pi, (task 4 the side of pi)
=====================
[exactly the same this as ETHTask1to3. ETHTask1to5pi for task 5 will be with firebase]
Task 4, (ETHTask1to4pi), is about creating a web server that utilizes both of the technologies, (thingy and hs100), to a web server. Thankfully a bug of instantiating the relevant technologies got sorted out, and now I can complete the task, (which is the most difficult and important one).
For examples/motion.js the console.table module needs to be installed explicitely, and that means "sudo npm install console.table"
the examples/radio.js is not working and it will not be used.
the examples/microphone.js is not working and it will not be used.
Button works
HS100 on/off works
Nettion on/off for plug 1 works
Led "works", (it is broken but it is confirmed by using the example as control)
Gas Sensor works, (I am not sure for the validity of the results).
The server delivers the data as json through get to /sdata
motion sensor works and generates data. Tried implement toggle on/off to the sensor but I was not able to do so. I added this functionality finally to the button. It works but it doesn't stop the sensor, (it is not a problem so we can ignore that).
A strange bug is that the sensor delivers the first motion data to the homepage after the button is pressed.
The link for the ifttt request is:
https://maker.ifttt.com/trigger/onoff/with/key/j2eqWrlFER7ngphU4IUTDmYD7QNigvN_mqXCg36Kd0L
the key is j2eqWrlFER7ngphU4IUTDmYD7QNigvN_mqXCg36Kd0L
For the plug 1 of Nettio, (http://194.47.1.210/nettio.cgi?pass=hkr&output1=4)
Important to run it with sudo:
1)sudo npm install
2)Probably needs "sudo npm install tplink-smarthome-api" as well.
3)sudo npm install console.table
4)sudo npm start

IMPORTANT INFORMATION ABOUT TASK 4
==================================
ETHTask1to4pi does not use firebase so it is important to utilize ip. To take the private ip, (inside the private network), you can type "ifconfig" on the pi and you will get the ip of the interface that you are using wlan or et0, (usally wlan on the lab).
You also can find the actual ip but we have that. for information there is that link here that can help a lot:
https://opensource.com/article/18/5/how-find-ip-address-linux
Have in mind that you will probably have to shut down you firewall for your domain, (sometimes private as well), network for the windows defender.
Also sometimes you need to make the device visilbe to other device in your local network.

